{"ast":null,"code":"import _objectSpread from \"/Users/Ken/Dropbox/Rutgers_Coding_BootCamp/FixIt5Project/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/Ken/Dropbox/Rutgers_Coding_BootCamp/FixIt5Project/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/Ken/Dropbox/Rutgers_Coding_BootCamp/FixIt5Project/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { useRef } from 'react';\nimport classNames from 'classnames';\nimport BaseOverlay from 'react-overlays/Overlay';\nimport safeFindDOMNode from 'react-overlays/safeFindDOMNode';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useOverlayOffset from './useOverlayOffset';\nimport Fade from './Fade';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar defaultProps = {\n  transition: Fade,\n  rootClose: false,\n  show: false,\n  placement: 'top'\n};\n\nfunction wrapRefs(props, arrowProps) {\n  var ref = props.ref;\n  var aRef = arrowProps.ref;\n\n  props.ref = ref.__wrapped || (ref.__wrapped = function (r) {\n    return ref(safeFindDOMNode(r));\n  });\n\n  arrowProps.ref = aRef.__wrapped || (aRef.__wrapped = function (r) {\n    return aRef(safeFindDOMNode(r));\n  });\n}\n\nvar Overlay =\n/*#__PURE__*/\nReact.forwardRef(function (_ref, outerRef) {\n  var overlay = _ref.children,\n      transition = _ref.transition,\n      _ref$popperConfig = _ref.popperConfig,\n      popperConfig = _ref$popperConfig === void 0 ? {} : _ref$popperConfig,\n      outerProps = _objectWithoutProperties(_ref, [\"children\", \"transition\", \"popperConfig\"]);\n\n  var popperRef = useRef({});\n\n  var _useOverlayOffset = useOverlayOffset(),\n      _useOverlayOffset2 = _slicedToArray(_useOverlayOffset, 2),\n      ref = _useOverlayOffset2[0],\n      modifiers = _useOverlayOffset2[1];\n\n  var mergedRef = useMergedRefs(outerRef, ref);\n  var actualTransition = transition === true ? Fade : transition || undefined;\n  return (\n    /*#__PURE__*/\n    _jsx(BaseOverlay, _objectSpread({}, outerProps, {\n      ref: mergedRef,\n      popperConfig: _objectSpread({}, popperConfig, {\n        modifiers: modifiers.concat(popperConfig.modifiers || [])\n      }),\n      transition: actualTransition,\n      children: function children(_ref2) {\n        var overlayProps = _ref2.props,\n            arrowProps = _ref2.arrowProps,\n            show = _ref2.show,\n            update = _ref2.update,\n            _ = _ref2.forceUpdate,\n            placement = _ref2.placement,\n            state = _ref2.state,\n            props = _objectWithoutProperties(_ref2, [\"props\", \"arrowProps\", \"show\", \"update\", \"forceUpdate\", \"placement\", \"state\"]);\n\n        var _state$modifiersData$;\n\n        wrapRefs(overlayProps, arrowProps);\n        var popper = Object.assign(popperRef.current, {\n          state: state,\n          scheduleUpdate: update,\n          placement: placement,\n          outOfBoundaries: (state == null ? void 0 : (_state$modifiersData$ = state.modifiersData.hide) == null ? void 0 : _state$modifiersData$.isReferenceHidden) || false\n        });\n        if (typeof overlay === 'function') return overlay(_objectSpread({}, props, overlayProps, {\n          placement: placement,\n          show: show\n        }, !transition && show && {\n          className: 'show'\n        }, {\n          popper: popper,\n          arrowProps: arrowProps\n        }));\n        return (\n          /*#__PURE__*/\n          React.cloneElement(overlay, _objectSpread({}, props, overlayProps, {\n            placement: placement,\n            arrowProps: arrowProps,\n            popper: popper,\n            className: classNames(overlay.props.className, !transition && show && 'show'),\n            style: _objectSpread({}, overlay.props.style, overlayProps.style)\n          }))\n        );\n      }\n    }))\n  );\n});\nOverlay.displayName = 'Overlay';\nOverlay.defaultProps = defaultProps;\nexport default Overlay;","map":null,"metadata":{},"sourceType":"module"}